{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0","program":"/Users/idok/.rustup/toolchains/nightly-2021-12-01-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","pairing","--edition=2018","/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=f5cc12fde53d7188","-C","extra-filename=-f5cc12fde53d7188","--out-dir","/Users/idok/neo/zk/neo-zk-tools/target/rls/debug/deps","-L","dependency=/Users/idok/neo/zk/neo-zk-tools/target/rls/debug/deps","--extern","group=/Users/idok/neo/zk/neo-zk-tools/target/rls/debug/deps/libgroup-4937cbc6f48f248c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/idok/.rustup/toolchains/nightly-2021-12-01-aarch64-apple-darwin"],"output":"/Users/idok/neo/zk/neo-zk-tools/target/rls/debug/deps/libpairing-f5cc12fde53d7188.rmeta"},"prelude":{"crate_id":{"name":"pairing","disambiguator":[7656875038477204701,0]},"crate_root":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src","external_crates":[{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5231689799850066461,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12080818428464079655,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17296295565214172833,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":4,"id":{"name":"group","disambiguator":[5449701078118433501,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12030305564614999212,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":6,"id":{"name":"ff","disambiguator":[14433426161591720773,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":7,"id":{"name":"subtle","disambiguator":[15423201565546637435,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":8,"id":{"name":"bitvec","disambiguator":[9051197812932434407,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":9,"id":{"name":"funty","disambiguator":[7221951420609749976,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":10,"id":{"name":"radium","disambiguator":[9909629879838656081,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":11,"id":{"name":"tap","disambiguator":[11512447895934554756,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":12,"id":{"name":"wyz","disambiguator":[2932754873429666164,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":13,"id":{"name":"rand_core","disambiguator":[460307942124180363,0]}},{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","num":14,"id":{"name":"byteorder","disambiguator":[5513515683336024443,0]}}],"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":0,"byte_end":4996,"line_start":1,"line_end":127,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":999,"byte_end":1004,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"alias_span":null,"name":"group","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":0,"byte_end":4996,"line_start":1,"line_end":127,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":56},{"krate":0,"index":60},{"krate":0,"index":64}],"decl_id":null,"docs":" A library for working with pairing-friendly curves.\n","sig":null,"attributes":[{"value":"/ A library for working with pairing-friendly curves.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":0,"byte_end":55,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"no_std","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":57,"byte_end":67,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"deny(broken_intra_doc_links)","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":819,"byte_end":851,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":898,"byte_end":937,"line_start":17,"line_end":17,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1453,"byte_end":1459,"line_start":32,"line_end":32,"column_start":11,"column_end":17},"name":"Engine","qualname":"::Engine","value":"Engine: Sized + 'static + Clone + Sync + Send + core::fmt::Debug","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":55}],"decl_id":null,"docs":" An \"engine\" is a collection of types (fields, elliptic curve groups, etc.)\n with well-defined relationships. In particular, the G1/G2 curve groups are\n of prime order `r`, and are equipped with a bilinear pairing function.\n","sig":null,"attributes":[{"value":"/ An \"engine\" is a collection of types (fields, elliptic curve groups, etc.)","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1210,"byte_end":1288,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ with well-defined relationships. In particular, the G1/G2 curve groups are","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1289,"byte_end":1367,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ of prime order `r`, and are equipped with a bilinear pairing function.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1368,"byte_end":1442,"line_start":31,"line_end":31,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1586,"byte_end":1588,"line_start":34,"line_end":34,"column_start":10,"column_end":12},"name":"Fr","qualname":"::Engine::Fr","value":"type Fr: PrimeField;","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" This is the scalar field of the engine's groups.\n","sig":null,"attributes":[{"value":"/ This is the scalar field of the engine's groups.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1524,"byte_end":1576,"line_start":33,"line_end":33,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":48},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1671,"byte_end":1673,"line_start":37,"line_end":37,"column_start":10,"column_end":12},"name":"G1","qualname":"::Engine::G1","value":"type G1: PrimeCurve<Scalar = Self::Fr, Affine = Self::G1Affine>\n        + From<Self::G1Affine>\n        + GroupOps<Self::G1Affine>\n        + GroupOpsOwned<Self::G1Affine>\n        + ScalarMul<Self::Fr>\n        + ScalarMulOwned<Self::Fr>;","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" The projective representation of an element in G1.\n","sig":null,"attributes":[{"value":"/ The projective representation of an element in G1.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1607,"byte_end":1661,"line_start":36,"line_end":36,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":49},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1967,"byte_end":1975,"line_start":45,"line_end":45,"column_start":10,"column_end":18},"name":"G1Affine","qualname":"::Engine::G1Affine","value":"type G1Affine: PairingCurveAffine<\n            Scalar = Self::Fr,\n            Curve = Self::G1,\n            Pair = Self::G2Affine,\n            PairingResult = Self::Gt,\n        > + From<Self::G1>\n        + Mul<Self::Fr, Output = Self::G1>\n        + for<'a> Mul<&'a Self::Fr, Output = Self::G1>;","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" The affine representation of an element in G1.\n","sig":null,"attributes":[{"value":"/ The affine representation of an element in G1.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1907,"byte_end":1957,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":2326,"byte_end":2328,"line_start":55,"line_end":55,"column_start":10,"column_end":12},"name":"G2","qualname":"::Engine::G2","value":"type G2: PrimeCurve<Scalar = Self::Fr, Affine = Self::G2Affine>\n        + From<Self::G2Affine>\n        + GroupOps<Self::G2Affine>\n        + GroupOpsOwned<Self::G2Affine>\n        + ScalarMul<Self::Fr>\n        + ScalarMulOwned<Self::Fr>;","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" The projective representation of an element in G2.\n","sig":null,"attributes":[{"value":"/ The projective representation of an element in G2.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":2262,"byte_end":2316,"line_start":54,"line_end":54,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":52},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":2622,"byte_end":2630,"line_start":63,"line_end":63,"column_start":10,"column_end":18},"name":"G2Affine","qualname":"::Engine::G2Affine","value":"type G2Affine: PairingCurveAffine<\n            Scalar = Self::Fr,\n            Curve = Self::G2,\n            Pair = Self::G1Affine,\n            PairingResult = Self::Gt,\n        > + From<Self::G2>\n        + Mul<Self::Fr, Output = Self::G2>\n        + for<'a> Mul<&'a Self::Fr, Output = Self::G2>;","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" The affine representation of an element in G2.\n","sig":null,"attributes":[{"value":"/ The affine representation of an element in G2.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":2562,"byte_end":2612,"line_start":62,"line_end":62,"column_start":5,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":54},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":2994,"byte_end":2996,"line_start":73,"line_end":73,"column_start":10,"column_end":12},"name":"Gt","qualname":"::Engine::Gt","value":"type Gt: Group<Scalar = Self::Fr> + ScalarMul<Self::Fr> + ScalarMulOwned<Self::Fr>;","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" The extension field that hosts the target group of the pairing.\n","sig":null,"attributes":[{"value":"/ The extension field that hosts the target group of the pairing.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":2917,"byte_end":2984,"line_start":72,"line_end":72,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3200,"byte_end":3207,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"pairing","qualname":"::Engine::pairing","value":"pub fn pairing(&Self::G1Affine, &Self::G2Affine) -> Self::Gt","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Invoke the pairing function `G1 x G2 -> Gt` without the use of precomputation and\n other optimizations.\n","sig":null,"attributes":[{"value":"/ Invoke the pairing function `G1 x G2 -> Gt` without the use of precomputation and","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3078,"byte_end":3163,"line_start":75,"line_end":75,"column_start":5,"column_end":90}},{"value":"/ other optimizations.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3168,"byte_end":3192,"line_start":76,"line_end":76,"column_start":5,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3369,"byte_end":3387,"line_start":82,"line_end":82,"column_start":11,"column_end":29},"name":"PairingCurveAffine","qualname":"::PairingCurveAffine","value":"PairingCurveAffine: PrimeCurveAffine + UncompressedEncoding","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"decl_id":null,"docs":" Affine representation of an elliptic curve point that can be used\n to perform pairings.\n","sig":null,"attributes":[{"value":"/ Affine representation of an elliptic curve point that can be used","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3264,"byte_end":3333,"line_start":80,"line_end":80,"column_start":1,"column_end":70}},{"value":"/ to perform pairings.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3334,"byte_end":3358,"line_start":81,"line_end":81,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3440,"byte_end":3444,"line_start":83,"line_end":83,"column_start":10,"column_end":14},"name":"Pair","qualname":"::PairingCurveAffine::Pair","value":"type Pair: PairingCurveAffine<Pair = Self>;","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3488,"byte_end":3501,"line_start":84,"line_end":84,"column_start":10,"column_end":23},"name":"PairingResult","qualname":"::PairingCurveAffine::PairingResult","value":"type PairingResult: Group;","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3544,"byte_end":3556,"line_start":87,"line_end":87,"column_start":8,"column_end":20},"name":"pairing_with","qualname":"::PairingCurveAffine::pairing_with","value":"pub fn pairing_with(&Self, &Self::Pair) -> Self::PairingResult","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Perform a pairing\n","sig":null,"attributes":[{"value":"/ Perform a pairing","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3515,"byte_end":3536,"line_start":86,"line_end":86,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":60},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3690,"byte_end":3705,"line_start":91,"line_end":91,"column_start":11,"column_end":26},"name":"MultiMillerLoop","qualname":"::MultiMillerLoop","value":"MultiMillerLoop: Engine","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" An engine that can compute sums of pairings in an efficient way.\n","sig":null,"attributes":[{"value":"/ An engine that can compute sums of pairings in an efficient way.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3611,"byte_end":3679,"line_start":90,"line_end":90,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":61},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3772,"byte_end":3782,"line_start":93,"line_end":93,"column_start":10,"column_end":20},"name":"G2Prepared","qualname":"::MultiMillerLoop::G2Prepared","value":"type G2Prepared: Clone + Send + Sync + From<Self::G2Affine>;","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" The prepared form of `Self::G2Affine`.\n","sig":null,"attributes":[{"value":"/ The prepared form of `Self::G2Affine`.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3720,"byte_end":3762,"line_start":92,"line_end":92,"column_start":5,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":62},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3890,"byte_end":3896,"line_start":96,"line_end":96,"column_start":10,"column_end":16},"name":"Result","qualname":"::MultiMillerLoop::Result","value":"type Result: MillerLoopResult<Gt = Self::Gt>;","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" The type returned by `Engine::miller_loop`.\n","sig":null,"attributes":[{"value":"/ The type returned by `Engine::miller_loop`.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3833,"byte_end":3880,"line_start":95,"line_end":95,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4072,"byte_end":4089,"line_start":100,"line_end":100,"column_start":8,"column_end":25},"name":"multi_miller_loop","qualname":"::MultiMillerLoop::multi_miller_loop","value":"pub fn multi_miller_loop(&[(&Self::G1Affine, &Self::G2Prepared)])\n-> Self::Result","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Computes $$\\sum_{i=1}^n \\textbf{ML}(a_i, b_i)$$ given a series of terms\n $$(a_1, b_1), (a_2, b_2), ..., (a_n, b_n).$$\n","sig":null,"attributes":[{"value":"/ Computes $$\\sum_{i=1}^n \\textbf{ML}(a_i, b_i)$$ given a series of terms","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3936,"byte_end":4011,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/ $$(a_1, b_1), (a_2, b_2), ..., (a_n, b_n).$$","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4016,"byte_end":4064,"line_start":99,"line_end":99,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4425,"byte_end":4441,"line_start":108,"line_end":108,"column_start":11,"column_end":27},"name":"MillerLoopResult","qualname":"::MillerLoopResult","value":"MillerLoopResult: Clone + Copy + Default + core::fmt::Debug + Send + Sync + Add<Output = Self> +\nfor<'a> Add<&'a Self, Output = Self> + AddAssign + for<'a> AddAssign<&'a Self>","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68}],"decl_id":null,"docs":" Represents results of a Miller loop, one of the most expensive portions of the pairing\n function.","sig":null,"attributes":[{"value":"/ Represents results of a Miller loop, one of the most expensive portions of the pairing","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4158,"byte_end":4248,"line_start":103,"line_end":103,"column_start":1,"column_end":91}},{"value":"/ function.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4249,"byte_end":4262,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4263,"byte_end":4266,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ `MillerLoopResult`s cannot be compared with each other until","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4267,"byte_end":4331,"line_start":106,"line_end":106,"column_start":1,"column_end":65}},{"value":"/ [`MillerLoopResult::final_exponentiation`] is called, which is also expensive.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4332,"byte_end":4414,"line_start":107,"line_end":107,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":67},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4724,"byte_end":4726,"line_start":121,"line_end":121,"column_start":10,"column_end":12},"name":"Gt","qualname":"::MillerLoopResult::Gt","value":"type Gt: Group;","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" The extension field that hosts the target group of the pairing.\n","sig":null,"attributes":[{"value":"/ The extension field that hosts the target group of the pairing.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4647,"byte_end":4714,"line_start":120,"line_end":120,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4954,"byte_end":4974,"line_start":126,"line_end":126,"column_start":8,"column_end":28},"name":"final_exponentiation","qualname":"::MillerLoopResult::final_exponentiation","value":"pub fn final_exponentiation(&Self) -> Self::Gt","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":" This performs a \"final exponentiation\" routine to convert the result of a Miller\n loop into an element of [`MillerLoopResult::Gt`], so that it can be compared with\n other elements of `Gt`.\n","sig":null,"attributes":[{"value":"/ This performs a \"final exponentiation\" routine to convert the result of a Miller","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4740,"byte_end":4824,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ loop into an element of [`MillerLoopResult::Gt`], so that it can be compared with","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4829,"byte_end":4914,"line_start":124,"line_end":124,"column_start":5,"column_end":90}},{"value":"/ other elements of `Gt`.","span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4919,"byte_end":4946,"line_start":125,"line_end":125,"column_start":5,"column_end":32}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1461,"byte_end":1466,"line_start":32,"line_end":32,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":3021},"to":{"krate":0,"index":46}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1479,"byte_end":1484,"line_start":32,"line_end":32,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":1,"index":2637},"to":{"krate":0,"index":46}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1487,"byte_end":1491,"line_start":32,"line_end":32,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":1,"index":3028},"to":{"krate":0,"index":46}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1494,"byte_end":1498,"line_start":32,"line_end":32,"column_start":52,"column_end":56},"kind":"SuperTrait","from":{"krate":1,"index":3016},"to":{"krate":0,"index":46}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":1512,"byte_end":1517,"line_start":32,"line_end":32,"column_start":70,"column_end":75},"kind":"SuperTrait","from":{"krate":1,"index":9403},"to":{"krate":0,"index":46}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3389,"byte_end":3405,"line_start":82,"line_end":82,"column_start":31,"column_end":47},"kind":"SuperTrait","from":{"krate":4,"index":137},"to":{"krate":0,"index":56}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3408,"byte_end":3428,"line_start":82,"line_end":82,"column_start":50,"column_end":70},"kind":"SuperTrait","from":{"krate":4,"index":255},"to":{"krate":0,"index":56}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":3707,"byte_end":3713,"line_start":91,"line_end":91,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":46},"to":{"krate":0,"index":60}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4447,"byte_end":4452,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2637},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4459,"byte_end":4463,"line_start":110,"line_end":110,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3026},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4470,"byte_end":4477,"line_start":111,"line_end":111,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2994},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4495,"byte_end":4500,"line_start":112,"line_end":112,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":9403},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4507,"byte_end":4511,"line_start":113,"line_end":113,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3016},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4518,"byte_end":4522,"line_start":114,"line_end":114,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":3028},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4529,"byte_end":4532,"line_start":115,"line_end":115,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":3083},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4562,"byte_end":4565,"line_start":116,"line_end":116,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":3083},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4597,"byte_end":4606,"line_start":117,"line_end":117,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":3114},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/idok/.cargo/registry/src/github.com-1ecc6299db9ec823/pairing-0.21.0/src/lib.rs","byte_start":4621,"byte_end":4630,"line_start":118,"line_end":118,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":3114},"to":{"krate":0,"index":64}}]}